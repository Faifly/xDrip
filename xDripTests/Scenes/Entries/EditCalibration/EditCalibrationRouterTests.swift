//
//  EditCalibrationRouterTests.swift
//  xDrip
//
//  Created by Artem Kalmykov on 17.03.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import xDrip
import XCTest

// swiftlint:disable implicitly_unwrapped_optional

final class EditCalibrationRouterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: EditCalibrationRouter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        sut = EditCalibrationRouter()
    }
    
    private func createSpy() -> ViewControllerSpy {
        ViewControllerSpy()
    }
    
    // MARK: Test doubles
    
    final class ViewControllerSpy: EditCalibrationViewController {
        var lastPresentedViewController: UIViewController?
        var dismissCalled = false
        
        override func present(
            _ viewControllerToPresent: UIViewController,
            animated flag: Bool,
            completion: (() -> Void)? = nil
        ) {
            lastPresentedViewController = viewControllerToPresent
        }
        
        override func dismiss(animated flag: Bool, completion: (() -> Void)? = nil) {
            dismissCalled = true
        }
    }
    
    // MARK: Tests
    
    func testDismissScene() {
        let spy = createSpy()
        sut.viewController = spy
        
        // When
        sut.dismissScene()
        // Then
        XCTAssertTrue(spy.dismissCalled)
    }
    
    func testShowError() {
        let spy = createSpy()
        sut.viewController = spy
        
        // When
        sut.showError("Test error")
        // Then
        guard let alert = spy.lastPresentedViewController as? UIAlertController else {
            XCTFail("Cannot obtain alert controller")
            return
        }
        
        XCTAssertTrue(alert.message == "Test error")
        XCTAssertTrue(alert.actions.count == 1)
    }
    
    func testShowSuccessAndDismiss() {
        let spy = createSpy()
        sut.viewController = spy
        
        // When
        sut.showSuccessAndDismiss()
        // Then
        guard let alert = spy.lastPresentedViewController as? UIAlertController else {
            XCTFail("Cannot obtain alert controller")
            return
        }
        
        XCTAssertTrue(alert.message == "edit_calibration_success_input_alert_message".localized)
    }
}
