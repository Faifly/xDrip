//
//  NightscoutCloudConfigurationPresenterTests.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import xDrip
import XCTest

// swiftlint:disable implicitly_unwrapped_optional

final class NightscoutCloudConfigurationPresenterTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: NightscoutCloudConfigurationPresenter!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupNightscoutCloudConfigurationPresenter()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupNightscoutCloudConfigurationPresenter() {
        sut = NightscoutCloudConfigurationPresenter()
    }
    
    // MARK: Test doubles
    
    final class NightscoutCloudConfigurationDisplayLogicSpy: NightscoutCloudConfigurationDisplayLogic {
        var displayDataCalled = false
        
        func displayData(viewModel: NightscoutCloudConfiguration.UpdateData.ViewModel) {
            displayDataCalled = true
        }
    }
    
    // MARK: Tests
    
    func testPresentLoad() {
        // Given
        let spy = NightscoutCloudConfigurationDisplayLogicSpy()
        sut.viewController = spy
        let response = NightscoutCloudConfiguration.UpdateData.Response(
            settings: NightscoutSyncSettings(),
            switchValueChangedHandler: { _, _ in },
            textEditingChangedHandler: { _, _ in },
            singleSelectionHandler: {},
            testConnectionHandler: {}
        )
        
        // When
        sut.presentData(response: response)
        
        // Then
        XCTAssertTrue(
            spy.displayDataCalled,
            "presentLoad(response:) should ask the view controller to display the result"
        )
    }
}
