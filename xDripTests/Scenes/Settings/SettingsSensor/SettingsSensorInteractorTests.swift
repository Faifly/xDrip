//
//  SettingsSensorInteractorTests.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import xDrip
import XCTest

final class SettingsSensorInteractorTests: XCTestCase {
    // MARK: Subject under test
    
    var sut: SettingsSensorInteractor!
    
    // MARK: Test lifecycle
    
    override func setUp() {
        super.setUp()
        setupSettingsSensorInteractor()
    }
    
    override func tearDown() {
        super.tearDown()
    }
    
    // MARK: Test setup
    
    func setupSettingsSensorInteractor() {
        sut = SettingsSensorInteractor()
    }
    
    // MARK: Test doubles
    
    final class SettingsSensorPresentationLogicSpy: SettingsSensorPresentationLogic {
        var presentLoadCalled = false
        
        func presentLoad(response: SettingsSensor.Load.Response) {
            presentLoadCalled = true
        }
    }
    
    final class SettingsSensorRoutingLogicSpy: SettingsSensorRoutingLogic {
        
    }
    
    // MARK: Tests
    
    func testDoLoad() {
        // Given
        let spy = SettingsSensorPresentationLogicSpy()
        sut.presenter = spy
        let request = SettingsSensor.Load.Request()
        
        // When
        sut.doLoad(request: request)
        
        // Then
        XCTAssertTrue(spy.presentLoadCalled, "doLoad(request:) should ask the presenter to format the result")
    }
}
