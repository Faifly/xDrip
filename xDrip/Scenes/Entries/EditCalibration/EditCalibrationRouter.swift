//
//  EditCalibrationRouter.swift
//  xDrip
//
//  Created by Artem Kalmykov on 17.03.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EditCalibrationRoutingLogic {
    func dismissScene()
    func showError(_ error: String)
    func showSuccessAndDismiss()
}

protocol EditCalibrationDataPassing {
    var dataStore: EditCalibrationDataStore? { get }
}

final class EditCalibrationRouter: EditCalibrationRoutingLogic, EditCalibrationDataPassing {
    weak var viewController: EditCalibrationViewController?
    weak var dataStore: EditCalibrationDataStore?
    
    // MARK: Routing
    
    func dismissScene() {
        viewController?.dismiss(animated: true, completion: nil)
    }
    
    func showError(_ error: String) {
        let alert = UIAlertController(title: "error".localized, message: error, preferredStyle: .alert)
        let okAction = UIAlertAction(title: "OK".localized, style: .cancel, handler: nil)
        alert.addAction(okAction)
        viewController?.present(alert, animated: true, completion: nil)
    }
    
    func showSuccessAndDismiss() {
        let alert = UIAlertController(
            title: "edit_calibration_success_input_alert_title".localized,
            message: "edit_calibration_success_input_alert_message".localized,
            preferredStyle: .alert
        )
        let okAction = UIAlertAction(title: "OK".localized, style: .cancel) { [weak self] _ in
            self?.dismissScene()
        }
        alert.addAction(okAction)
        viewController?.present(alert, animated: true, completion: nil)
    }
}
