//
//  EntriesListInteractor.swift
//  xDrip
//
//  Created by Artem Kalmykov on 17.03.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EntriesListBusinessLogic {
    func doLoad(request: EntriesList.Load.Request)
    func doCancel(request: EntriesList.Cancel.Request)
    func doDeleteEntry(request: EntriesList.DeleteEntry.Request)
    func doShowSelectedEntry(request: EntriesList.ShowSelectedEntry.Request)
}

protocol EntriesListDataStore {
    
}

final class EntriesListInteractor: EntriesListBusinessLogic, EntriesListDataStore {
    var presenter: EntriesListPresentationLogic?
    var router: EntriesListRoutingLogic?
    
    private var entries: [AbstractEntry] = []
    private var type: EntriesList.EntryType = .carbs
    
    // MARK: Do something
    
    func doLoad(request: EntriesList.Load.Request) {
        createDummies()
        
        let response = EntriesList.Load.Response(entries: entries, type: .carbs)
        presenter?.presentLoad(response: response)
    }
    
    func doCancel(request: EntriesList.Cancel.Request) {
        router?.dismissSelf()
    }
    
    func doDeleteEntry(request: EntriesList.DeleteEntry.Request) {
        entries.remove(at: request.index)
    }
    
    func doShowSelectedEntry(request: EntriesList.ShowSelectedEntry.Request) {
        let entry = entries[request.index]
        
        // add route to edit entry controller
    }
    
    private func createDummies() {
        entries = []
        
        for _ in 0 ... 20 {
            let randValue = Double.random(in: 0...40)
            let randomTimeInterval = TimeInterval.random(in: 0 ... 1_000_000_000)
            let date = Date(timeIntervalSince1970: randomTimeInterval)
            
            if type == .bolus {
                let entry = BolusEntry(amount: randValue, date: date)
                entries.append(entry)
            } else {
                let entry = CarbEntry(amount: randValue, foodType: nil, assimilationDuration: 0.0, date: date)
                entries.append(entry)
            }
        }
    }
}
