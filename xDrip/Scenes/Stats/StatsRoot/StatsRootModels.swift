//
//  StatsRootModels.swift
//  xDrip
//
//  Created by Artem Kalmykov on 11.03.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

struct StatsChartEntry {
    let hasValue: Bool
    let value: ClosedRange<Double>?
    let descriptor: String
    let interval: DateInterval
}

enum StatsRoot {
    // MARK: Models
    enum TimeFrame: CaseIterable {
        case today
        case yesterday
        case sevenDays
        case thirtyDays
        case nintyDays
    }
    
    enum CellType: CaseIterable {
        case range
        case absolute
        case medianMeanBG
        case hba1cEst
        case stdDev
        case relativeSD
        case gviPGS
    }
    
    struct Cell {
        let title: String
        let value: String
    }
    
    // MARK: Use cases
    
    enum Load {
        struct Request {
        }
        
        struct Response {
        }
        
        struct ViewModel {
        }
    }
    
    enum UpdateTimeFrame {
        struct Request {
            let timeFrame: TimeFrame
        }
    }
    
    enum UpdateTableData {
        struct Request {
        }
        
        struct Response {
            let readings: [BaseGlucoseReading]
            let lowGlucoseThreshold: Double
            let highGlucoseThreshold: Double
            let unit: GlucoseUnit
        }
        
        struct ViewModel {
            let cells: [Cell]
        }
    }
    
    enum UpdateChartData {
        struct Request {
        }
        
        struct Response {
            let readings: [BaseGlucoseReading]
            let timeFrame: TimeFrame
            let interval: DateInterval
        }
        
        struct ViewModel {
            let entries: [StatsChartEntry]
        }
    }
    
    enum Cancel {
        struct Request {
        }
        
        struct Response {
        }
        
        struct ViewModel {
        }
    }
}
