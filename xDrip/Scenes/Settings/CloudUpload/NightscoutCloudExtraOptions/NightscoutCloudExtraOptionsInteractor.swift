//
//  NightscoutCloudExtraOptionsInteractor.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NightscoutCloudExtraOptionsBusinessLogic {
    func doLoad(request: NightscoutCloudExtraOptions.Load.Request)
}

protocol NightscoutCloudExtraOptionsDataStore: AnyObject {
}

final class NightscoutCloudExtraOptionsInteractor: NightscoutCloudExtraOptionsBusinessLogic,
    NightscoutCloudExtraOptionsDataStore {
    var presenter: NightscoutCloudExtraOptionsPresentationLogic?
    var router: NightscoutCloudExtraOptionsRoutingLogic?
    
    private lazy var settings: NightscoutSyncSettings = {
        return User.current.settings.nightscoutSync ?? NightscoutSyncSettings()
    }()
    
    // MARK: Do something
    
    func doLoad(request: NightscoutCloudExtraOptions.Load.Request) {
        updateData()
    }
    
    private func handleSwitchValueChanged(_ field: NightscoutCloudExtraOptions.Field, _ value: Bool) {
        switch field {
        case .skipLANUploads:
//            settings.updateSkipLANUploads(value)
            router?.presentNotYetImplementedAlert()
            updateData()
            
        case .uploadBattery:
//            settings.updateUploadBridgeBattery(value)
            router?.presentNotYetImplementedAlert()
            updateData()
            
        case .uploadTreatments:
//            settings.updateUploadTreatments(value)
            router?.presentNotYetImplementedAlert()
            updateData()
            
        case .alertOnFailures:
//            settings.updateAlertOnFailures(value)
            router?.presentNotYetImplementedAlert()
            updateData()
            
        case .appendSourceInfo:
//            settings.updateAppendSourceInfoToDevices(value)
            router?.presentNotYetImplementedAlert()
            updateData()
            
        default: break
        }
    }
    
    private func updateData() {
        let response = NightscoutCloudExtraOptions.Load.Response(
            settings: settings,
            switchValueChangedHandler: handleSwitchValueChanged(_:_:),
            singleSelectionHandler: handleSingleSelection
        )
        presenter?.presentLoad(response: response)
    }
    
    private func handleSingleSelection() {
//        router?.routeToBackfillData()
        router?.presentNotYetImplementedAlert()
    }
}
