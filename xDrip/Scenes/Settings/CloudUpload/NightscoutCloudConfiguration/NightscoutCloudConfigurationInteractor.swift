//
//  NightscoutCloudConfigurationInteractor.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NightscoutCloudConfigurationBusinessLogic {
    func doLoad(request: NightscoutCloudConfiguration.Load.Request)
}

protocol NightscoutCloudConfigurationDataStore: AnyObject {
}

final class NightscoutCloudConfigurationInteractor: NightscoutCloudConfigurationBusinessLogic,
    NightscoutCloudConfigurationDataStore {
    var presenter: NightscoutCloudConfigurationPresentationLogic?
    var router: NightscoutCloudConfigurationRoutingLogic?
    
    private lazy var settings: NightscoutSyncSettings = {
        return User.current.settings.nightscoutSync ?? NightscoutSyncSettings()
    }()
    
    // MARK: Do something
    
    func doLoad(request: NightscoutCloudConfiguration.Load.Request) {
        let response = NightscoutCloudConfiguration.Load.Response(
            settings: settings,
            switchValueChangedHandler: handleSwitchValueChanged(_:_:),
            textEditingChangedHandler: handleTextEditingChanged(_:),
            singleSelectionHandler: handleSingleSelection
        )
        
        presenter?.presentLoad(response: response)
    }
    
    private func handleSwitchValueChanged(_ field: NightscoutCloudConfiguration.Field, _ value: Bool) {
        switch field {
        case .enabled: settings.updateIsEnabled(value)
        case .useCellularData: settings.updateUseCellularData(value)
        case .sendDisplayGlucose: settings.updateSendDisplayGlucose(value)
        case .downloadData: settings.updateDownloadData(value)
        default: break
        }
    }
    
    private func handleTextEditingChanged(_ string: String?) {
        settings.updateBaseURL(string)
    }
    
    private func handleSingleSelection() {
        router?.routeToExtraOptions()
    }
}
