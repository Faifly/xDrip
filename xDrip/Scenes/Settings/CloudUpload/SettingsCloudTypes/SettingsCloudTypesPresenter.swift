//
//  SettingsCloudTypesPresenter.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsCloudTypesPresentationLogic {
    func presentLoad(response: SettingsCloudTypes.Load.Response)
}

final class SettingsCloudTypesPresenter: SettingsCloudTypesPresentationLogic {
    weak var viewController: SettingsCloudTypesDisplayLogic?
    
    // MARK: Do something
    
    func presentLoad(response: SettingsCloudTypes.Load.Response) {
        let tableViewModel = BaseSettings.ViewModel(
            sections: [
                createSection(response: response)
            ]
        )
        
        let viewModel = SettingsCloudTypes.Load.ViewModel(tableViewModel: tableViewModel)
        viewController?.displayLoad(viewModel: viewModel)
    }
    
    private func createSection(response: SettingsCloudTypes.Load.Response) -> BaseSettings.Section {
        let cells: [BaseSettings.Cell] = [
            createDisclosureCell(
                mainText: "settings_cloud_types_nightscout_sync".localized,
                detailText: nil,
                selectionHandler: response.singleSelectionHandler
            )
        ]
        
        return .normal(cells: cells, header: nil, footer: "settings_cloud_types_section_footer".localized)
    }
    
    private func createDisclosureCell(
        mainText: String,
        detailText: String?,
        selectionHandler: @escaping () -> Void) -> BaseSettings.Cell {
        return .disclosure(
            mainText: mainText,
            detailText: detailText,
            selectionHandler: {
                selectionHandler()
            }
        )
    }
}
