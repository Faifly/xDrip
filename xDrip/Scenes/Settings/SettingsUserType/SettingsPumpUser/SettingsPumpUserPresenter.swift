//
//  SettingsPumpUserPresenter.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsPumpUserPresentationLogic {
    func presentLoad(response: SettingsPumpUser.Load.Response)
    func presentState(response: SettingsPumpUser.UpdateState.Response)
}

final class SettingsPumpUserPresenter: SettingsPumpUserPresentationLogic {
    weak var viewController: SettingsPumpUserDisplayLogic?
    
    // MARK: Do something
    
    func presentLoad(response: SettingsPumpUser.Load.Response) {
        let viewModel = SettingsPumpUser.Load.ViewModel()
        viewController?.displayLoad(viewModel: viewModel)
    }
    
    func presentState(response: SettingsPumpUser.UpdateState.Response) {
        let notAvailable = "not_available".localized
        let dateString: String
        if let date = response.settings.connectionDate {
            dateString = DateFormatter.localizedString(from: date, dateStyle: .medium, timeStyle: .medium)
        } else {
            dateString = notAvailable
        }
        
        let viewModel = SettingsPumpUser.UpdateState.ViewModel(
            isSynced: response.settings.isEnabled,
            nightscoutURL: response.settings.nightscoutURL ?? notAvailable,
            pumpID: response.settings.pumpID ?? notAvailable,
            manufacturer: response.settings.manufacturer ?? notAvailable,
            model: response.settings.model ?? notAvailable,
            connectionDate: dateString
        )
        viewController?.displayState(viewModel: viewModel)
    }
}
