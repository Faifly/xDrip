//
//  SettingsTransmitterRouter.swift
//  xDrip
//
//  Created by Artem Kalmykov on 09.04.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SettingsTransmitterRoutingLogic {
    func showInvalidSerialError()
    func showStopTransmitterConfirmation(callback: @escaping () -> Void)
    func showTransmitterResetConfirmation(callback: @escaping () -> Void)
    func showResetUnsupportedWarning()
}

protocol SettingsTransmitterDataPassing {
    var dataStore: SettingsTransmitterDataStore? { get }
}

final class SettingsTransmitterRouter: SettingsTransmitterRoutingLogic, SettingsTransmitterDataPassing {
    weak var viewController: SettingsTransmitterViewController?
    weak var dataStore: SettingsTransmitterDataStore?
    
    // MARK: Routing
    
    func showInvalidSerialError() {
        UIAlertController.showOKAlert(
            title: "settings_transmitter_invalid_serial_alert_title".localized,
            message: "settings_transmitter_invalid_serial_alert_message".localized
        )
    }
    
    func showStopTransmitterConfirmation(callback: @escaping () -> Void) {
        let alert = UIAlertController(
            title: "settings_transmitter_stop_transmitter_alert_title".localized,
            message: "settings_transmitter_stop_transmitter_alert_message".localized,
            preferredStyle: .alert
        )
        
        let confirmAction = UIAlertAction(
            title: "settings_transmitter_stop_transmitter_confirm_button".localized,
            style: .destructive) { _ in
                callback()
        }
        alert.addAction(confirmAction)
        
        let cancelAction = UIAlertAction(title: "cancel".localized, style: .default, handler: nil)
        alert.addAction(cancelAction)
        
        viewController?.present(alert, animated: true, completion: nil)
    }
    
    func showTransmitterResetConfirmation(callback: @escaping () -> Void) {
        let alert = UIAlertController(
            title: "settings_transmitter_reset_transmitter_alert_title".localized,
            message: "settings_transmitter_reset_transmitter_alert_message".localized,
            preferredStyle: .alert
        )
        
        let confirmAction = UIAlertAction(
            title: "settings_transmitter_reset_transmitter_confirm_button".localized,
            style: .destructive) { _ in
                callback()
        }
        alert.addAction(confirmAction)
        
        let cancelAction = UIAlertAction(title: "cancel".localized, style: .default, handler: nil)
        alert.addAction(cancelAction)
        
        viewController?.present(alert, animated: true, completion: nil)
    }
    
    func showResetUnsupportedWarning() {
        UIAlertController.showOKAlert(
            title: "settings_transmitter_reset_unsupported_alert_title".localized,
            message: "settings_transmitter_reset_unsupported_alert_message".localized
        )
    }
}
