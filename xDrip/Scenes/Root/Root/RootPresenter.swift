//
//  RootPresenter.swift
//  xDrip
//
//  Created by Artem Kalmykov on 23.02.2020.
//  Copyright (c) 2020 Faifly. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RootPresentationLogic {
    func presentLoad(response: Root.Load.Response)
    func presentAddEntry(response: Root.ShowAddEntryOptionsList.Response)
}

private extension Root.EntryType {
    var label: String {
        switch self {
        case .bolus:
            return "root_add_entry_bolus".localized
        case .calibration:
            return ""
        case .carbs:
            return "root_add_entry_carbs".localized
        case .food:
            return "root_add_entry_food".localized
        case .injection:
            return ""
        case .training:
            return "root_add_entry_training".localized
        }
    }
}

final class RootPresenter: RootPresentationLogic {
    weak var viewController: RootDisplayLogic?
    
    // MARK: Do something
    
    func presentLoad(response: Root.Load.Response) {
        let viewModel = Root.Load.ViewModel()
        viewController?.displayLoad(viewModel: viewModel)
    }
    
    func presentAddEntry(response: Root.ShowAddEntryOptionsList.Response) {
        let titles = response.types.map { $0.label }
        
        let viewModel = Root.ShowAddEntryOptionsList.ViewModel(titles: titles)
        viewController?.displayAddEntry(viewModel: viewModel)
    }
}
